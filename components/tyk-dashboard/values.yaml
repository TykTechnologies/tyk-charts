# nameOverride overrides the Chart name. It is truncated to 63 characters.
nameOverride: ""

# fullnameOverride overrides App name. It is truncated to 63 characters.
fullnameOverride: ""

global:
  license:
    # The license key needed by Tyk Dashboard to work.
    #
    # NOTE: If you do not want to store license as a plain text in the file, you can use a Kubernetes secret
    # that stores the dashboard license. Please see `.global.secrets.useSecretName`.
    dashboard: ""

  # Dashboard admin information.
  adminUser:
    # If you don't want to store plaintext secrets for admin user in the Helm value file and would
    # rather provide the k8s Secret externally please populate the value below
    # You can set following fields in the secret
    # adminUserFirstName - sets .global.adminUser.firstName
    # adminUserLastName - sets .global.adminUser.lastName
    # adminUserEmail - sets .global.adminUser.email
    # adminUserPassword - sets .global.adminUser.password
    useSecretName: ""

    # firstName corresponds to the first name of the admin user going to be created in bootstrap.
    # It is used to set TYK_K8SBOOTSTRAP_TYK_ADMIN_FIRSTNAME
    firstName: admin
    # lastName corresponds to the last name of the admin user going to be created in bootstrap.
    # It is used to set TYK_K8SBOOTSTRAP_TYK_ADMIN_LASTNAME
    lastName: user
    # email corresponds to the email of the admin user going to be created in bootstrap.
    # It is used to set TYK_K8SBOOTSTRAP_TYK_ADMIN_EMAILADDRESS
    email: default@example.com
    # Set a password or a random one will be assigned.
    password: "123456"

  servicePorts:
    # The port at which the dashboard service can be found
    dashboard: 3000
    # The port at which the gateway service can be found
    gateway: 8080

  secrets:
    # tyk_analytics.conf tyk_api_config.secret
    # tyk_analytics.conf shared_node_secret
    APISecret: CHANGEME
    # tyk_analytics.conf admin_secret
    # tib.conf TykAPISettings.GatewayConfig.AdminSecret
    # tib.conf TykAPISettings.DashboardConfig.AdminSecret
    AdminSecret: "12345"
    # If you don't want to store plaintext secrets in the Helm value file and would
    # rather provide the k8s Secret externally please populate the value below
    # You can set following fields in the secret
    # APISecret - Sets tyk_api_config.Secret and shared_node_secret in Dashboard config file
    # AdminSecret - Admin user secret key
    # DashLicense - Tyk Dashboard license key
    useSecretName: ""

  tls:
    # When true, sets the gateway protocol to HTTPS.
    gateway: false
    # If set to true the Dashboard will use SSL connection.
    # You will also need to set the:
    # - TYK_DB_SERVEROPTIONS_CERTIFICATE_CERTFILE
    # - TYK_DB_SERVEROPTIONS_CERTIFICATE_KEYFILE
    # variables in extraEnvs object array to define your SSL cert and key files.
    dashboard: false

    # When true, it will install the certificate present in the templates folder, set to false when using
    # a custom TLS certificate to avoid overwriting yours
    useDefaultTykCertificate: true

  # Choose the storageType for Tyk. [ "mongo", "postgres" ]
  storageType: postgres

  postgres:
    # host corresponds to the host name of postgres
    host: tyk-postgres-postgresql.tyk.svc
    # port corresponds to the port of postgres
    port: 5432
    # user corresponds to the user of postgres
    user: postgres
    # password corresponds to the password of the given postgres user in selected database
    password:
    # database corresponds to the database to be used in postgres
    database: tyk_analytics
    # sslmode corresponds to if postgres runs in sslmode (https)
    sslmode:

    # connection string can also be set using a secret. Provide the name of the secret and key below.
    # connectionStringSecret:
    #   name: ""
    #   keyName: ""

  redis:
    # The addrs value will allow you to set your Redis addresses. If you are
    # using a redis cluster, you can list the endpoints of the redis instances
    # or use the cluster configuration endpoint.
    # Default value: redis.{{ .Release.Namespace }}.svc:6379
    addrs:
    #   - redis.tyk.svc:6379
    #   This is the DNS name of the redis as set when using Bitnami
    #   - "tyk-redis-master.tyk.svc:6379"

    # Redis password
    # If you're using Bitnami Redis chart please input your password in the field below
    pass: ""

    # Redis password can also be provided via a secret. Provide the name of the secret and key below.
    # passSecret:
    #   name: ""
    #   keyName: ""

    # Enables SSL for Redis connection. Redis instance will have to support that.
    # Default value: false
    # useSSL: true

    # The enableCluster value will allow you to indicate to Tyk whether you are
    # running a Redis cluster or not.
    # Default value: false
    # enableCluster: true

    # By default, the database index is 0. Setting the database index is not
    # supported with redis cluster. As such, if you have enableCluster: true,
    # then this value should be omitted or explicitly set to 0.
    storage:
      database: 0

  # Please check https://tyk.io/docs/planning-for-production/database-settings/mongodb/#supported-versions
  # for the list of supported MongoDB versions.
  mongo:
    useSSL: false
    # For tyk-simple-mongo (no auth)
    # mongoURL: mongodb://mongo.tyk.svc:27017/tyk_analytics
    mongoURL: ""
    # mongo-go driver is supported for Tyk 5.0.2+.
    # We recommend using the mongo-go driver if you are using MongoDB 4.4.x+.
    # For MongoDB versions prior to 4.4, please use the mgo driver.
    driver: mgo

    # Connection URL can also be set using a secret. Provide the name of the secret and key below.
    # connectionURLSecret:
    #   name: ""
    #   keyName: ""

dashboard:
  # This is the full URL of your Tyk node, which is used to set TYK_DB_TYKAPI_HOST
  # The URL needs to be formatted as: http://gateway_host
  tykApiHost: ""
  # used to set TYK_DB_ENABLEOWNERSHIP
  enableOwnership: true
  # TYK_DB_PAGESIZE
  defaultPageSize: 10
  # TYK_DB_NOTIFYONCHANGE
  notifyOnChange: true
  # TYK_DB_HASHKEYS
  hashKeys: true
  # TYK_DB_ENABLEDUPLICATESLUGS
  enableDuplicateSlugs: true
  # TYK_DB_SHOWORGID
  showOrgId: true
  # TYK_DB_HOSTCONFIG_ENABLEHOSTNAMES
  hostConfig:
    # TYK_DB_HOSTCONFIG_ENABLEHOSTNAMES
    enableHostNames: true
    # TYK_DB_HOSTCONFIG_DISABLEORGSLUGPREFIX
    disableOrgSlugPrefix: true
    # TYK_DB_HOSTCONFIG_GATEWAYHOSTNAME
    overrideHostname: "tyk-gw.local"
  # TYK_DB_HOMEDIR
  homeDir: "/opt/tyk-dashboard"
  # TYK_DB_USESHARDEDANALYTICS
  useShardedAnalytics: false
  # TYK_DB_NOTIFYONCHANGE
  enableAggregateLookups: true
  # TYK_DB_ENABLEANALYTICSCACHE
  enableAnalyticsCache: true
  # TYK_DB_ALLOWEXPLICITPOLICYID
  allowExplicitPolicyId: true
  # TYK_DB_OAUTHREDIRECTURISEPARATOR
  oauthRedirectUriSeparator: ";"
  # TYK_DB_KEYREQUESTFIELDS
  keyRequestFields: "appName;appType"
  # TYK_DB_DASHBOARDSESSIONLIFETIME
  dashboardSessionLifetime: 43200
  # TYK_DB_SSOENABLEUSERLOOKUP
  ssoEnableUserLookup: true
  # TYK_DB_NOTIFICATIONSLISTENPORT
  notificationsListenPort: 5000
  # TYK_DB_ENABLEDELETEKEYBYHASH
  enableDeleteKeyByHash: true
  # TYK_DB_ENABLEUPDATEKEYBYHASH
  enableUpdateKeyByHash: true
  # TYK_DB_ENABLEHASHEDKEYSLISTING
  enableHashedKeysListing: true
  # TYK_DB_ENABLEMULTIORGUSERS
  enableMultiOrgUsers: true

  # replicaCount specifies number of replicas to be created if kind is Deployment.
  replicaCount: 1

  # podAnnotations is annotations to be added to Tyk Dashboard pod.
  # It takes key-value pairs.
  # There are no required annotation field for Tyk Dashboard.
  #
  # podAnnotations:
  #   yourkey: value
  #   image: yourhub
  podAnnotations: {}

  image:
    # image repository for Tyk Dashboard.
    repository: tykio/tyk-dashboard

    # tag for Tyk Dashboard
    tag: v5.2.3

    # image pull policy
    pullPolicy: Always

  # image pull secrets to use when pulling images from repository
  imagePullSecrets: []

  service:
    # type corresponds to the service type of Tyk Dashboard Service.
    type: NodePort
    # externalTrafficPolicy corresponds to the external traffic policy if the service type is load balancer
    externalTrafficPolicy: Local
    # annotations corresponds to the annotations which will be added into Tyk Dashboard Service.
    annotations: {}

  # We usually recommend not to specify default resources and to leave this
  # as a conscious choice for the user. This also increases chances charts
  # run on environments with little resources, such as Minikube. If you do
  # want to specify resources, uncomment the following lines, adjust them
  # as necessary, and remove the curly braces after 'resources:'.
  #  resources:
  #   limits:
  #    cpu: 100m
  #    memory: 128Mi
  #   requests:
  #    cpu: 100m
  #    memory: 128Mi
  resources: {}

  # securityContext holds pod-level security attributes for Tyk Dashboard pod.
  securityContext:
    runAsUser: 1000
    fsGroup: 2000

  # containerSecurityContext holds container-level security attributes for Tyk Dashboard container.
  containerSecurityContext:
    runAsNonRoot: true
    allowPrivilegeEscalation: false
    privileged: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
      - all

  # nodeSelector is a selector which must be true for Tyk Dashboard pod to fit on a specific node.
  nodeSelector: {}
  # tolerations specifies tolerations to be applied on Tyk Dashboard pods.
  tolerations: []
  # affinity specifies affinity and anti-affinity constraints.
  affinity: {}

  # extraEnvs is used to set extra environment variables to Tyk Dashboard pod.
  # - name: TYK_DB_PAGESIZE
  #   value: "10"
  extraEnvs: []

  # extraVolumes is a list of volumes to be added to the pod
  # extraVolumes:
  #   - name: ca-certs
  #     secret:
  #       defaultMode: 420
  #       secretName: ca-certs
  extraVolumes: []

  # extraVolumeMounts is a list of volume mounts to be added to the pod
  # extraVolumeMounts:
  #   - name: ca-certs
  #     mountPath: /etc/ssl/certs/ca-certs.crt
  #     readOnly: true
  extraVolumeMounts: []

  # The hostname to bind the Dashboard to.
  hostName: tyk-dashboard.local

  tls:
    # The name of the secret which should contain the TLS certificate you want to use with the dashboard deployment
    secretName: tyk-default-tls-secret
    # This options allows you to skip verifying the TLS certificate. This is typically enabled when using self-signed certs.
    insecureSkipVerify: false

    # certificatesMountPath corresponds to the mount path of the secret.
    certificatesMountPath: "/etc/certs/tyk-dashboard"
    # certificates is an array of strings, used to set TYK_DB_HTTPSERVEROPTIONS_CERTIFICATES
    certificates:
      - domain_name: "*"
        cert_file: "/etc/certs/tyk-dashboard/tls.crt"
        key_file: "/etc/certs/tyk-dashboard/tls.key"

  # ingress specifies Ingress rules for Tyk Dashboard Service.
  # Ingress is disabled by default.
  ingress:
    # enabled specifies whether ingress is enabled or not.
    # Set it to true to enable Ingress for Tyk Dashboard Service.
    enabled: false

    # className specifies your ingress controller class name below
    className: ""

    # annotations specifies annotations to be added on Ingress resource.
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"

    # hosts corresponds to the rules to be added on Ingress rules.
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific

    # tls corresponds to the tls configuration if Ingress rules use TLS
    tls: []

portal:
  # ingress specifies Ingress rules for Tyk Classic Portal
  # Ingress is disabled by default.
  ingress:
    # enabled specifies whether ingress is enabled or not.
    # Set it to true to enable Ingress for Tyk Dashboard Service.
    enabled: false

    # specify your ingress controller class name below
    className: ""

    # annotations specifies annotations to be added on Ingress resource.
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"

    # hosts corresponds to the rules to be added on Ingress rules.
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific

    # tls corresponds to the tls configuration if Ingress rules use TLS
    tls: []

