# nameOverride overrides the Chart name. It is truncated to 63 characters.
nameOverride: ""

# fullnameOverride overrides App name. It is truncated to 63 characters.
fullnameOverride: ""

global:
  license:
    # The license key needed by Tyk Dashboard to work.
    #
    # NOTE: If you do not want to store license as a plain text in the file, you can use a Kubernetes secret
    # that stores the dashboard license. Please see `.global.secrets.useSecretName`.
    dashboard: ""

  # adminUser specifies credentials for the Tyk Dashboard admin user that will be created while bootstrapping the Tyk Dashboard.
  # Dashboard admin information.
  adminUser:
    # If you don't want to store plaintext secrets for admin user in the Helm value file and would
    # rather provide the k8s Secret externally please populate the value below
    # You can set following fields in the secret
    # adminUserFirstName - sets .global.adminUser.firstName
    # adminUserLastName - sets .global.adminUser.lastName
    # adminUserEmail - sets .global.adminUser.email
    # adminUserPassword - sets .global.adminUser.password
    useSecretName: ""

    # firstName corresponds to the first name of the admin user that will be created during the bootstrapping process.
    # It is used to set TYK_K8SBOOTSTRAP_TYK_ADMIN_FIRSTNAME
    firstName: admin
    # lastName corresponds to the last name of the admin user that will be created during the bootstrapping process.
    # It is used to set TYK_K8SBOOTSTRAP_TYK_ADMIN_LASTNAME
    lastName: user
    # email corresponds to the email of the admin user that will be created during the bootstrapping process.
    # It is used to set TYK_K8SBOOTSTRAP_TYK_ADMIN_EMAILADDRESS
    email: default@example.com
    # Set a password or a random one will be assigned.
    password: "123456"

  servicePorts:
    # The port at which the dashboard service can be found
    dashboard: 3000
    # The port at which the gateway service can be found
    gateway: 8080

  secrets:
    # tyk_analytics.conf tyk_api_config.secret
    # tyk_analytics.conf shared_node_secret
    APISecret: CHANGEME
    # tyk_analytics.conf admin_secret
    AdminSecret: "12345"
    # If you don't want to store plaintext secrets in the Helm value file and would
    # rather provide the k8s Secret externally please populate the value below
    # You can set following fields in the secret
    # APISecret - Sets tyk_api_config.Secret and shared_node_secret in Dashboard config file
    # AdminSecret - Admin user secret key
    # DashLicense - Tyk Dashboard license key
    useSecretName: ""

  tls:
    # When true, sets the gateway protocol to HTTPS.
    gateway: false
    # If set to true the Dashboard will use SSL connection.
    dashboard: false

    # When true, it will install the certificate present in the templates folder, set to false when using
    # a custom TLS certificate to avoid overwriting yours
    useDefaultTykCertificate: true

  imageRegistry: ""

  # Choose the storageType for Tyk. [ "mongo", "postgres" ]
  storageType: postgres

  postgres:
    # host corresponds to the host name of postgres
    host: tyk-postgres-postgresql.tyk.svc
    # port corresponds to the port of postgres
    port: 5432
    # user corresponds to the user of postgres
    user: postgres
    # password corresponds to the password of the given postgres user in selected database
    password:
    # database corresponds to the database to be used in postgres
    database: tyk_analytics
    # sslmode corresponds to if postgres runs in sslmode (https)
    sslmode: disable

    # Connection string can also be set using a secret. Provide the name of the secret and key below.
    # connectionStringSecret:
    #   name: ""
    #   keyName: ""

  redis:
    # The addrs value will allow you to set your Redis addresses. If you are
    # using a redis cluster, you can list the endpoints of the redis instances
    # or use the cluster configuration endpoint.
    # Default value: redis.{{ .Release.Namespace }}.svc:6379
    addrs:
    #   - redis.tyk.svc:6379
    #   This is the DNS name of the redis as set when using Bitnami
    #   - "tyk-redis-master.tyk.svc:6379"

    # Redis password
    # If you're using Bitnami Redis chart please input your password in the field below
    pass: ""

    # Redis password can also be provided via a secret. Provide the name of the secret and key below.
    # passSecret:
    #   name: ""
    #   keyName: ""

    # Enables SSL for Redis connection. Redis instance will have to support that.
    # Default value: false
    useSSL: false

    # Set this to `true` to tell Dashboard to ignore database's cert validation.
    # Default value: true
    # sslInsecureSkipVerify: true

    # Path to the CA file.
    # caFile: "/etc/certs/ca.crt"

    # The Volume mount path
    # Default value: /etc/certs 
    # certificatesMountPath: "/etc/certs"    

    # Path to the cert file.
    # certFile: "/etc/certs/redis.crt"  

    # Path to the key file.
    # keyFile: "/etc/certs/redis.key"

    # Maximum supported TLS version. Valid values are TLS 1.0, 1.1, 1.2, 1.3.
    # Default value: 1.3
    # tlsMaxVersion: "1.3"

    # Minimum supported TLS version. Valid values are TLS 1.0, 1.1, 1.2, 1.3.
    # Default value: 1.2
    # tlsMinVersion: "1.2"

    # Name of the tls secret. A secret needs to be created for this manually using the name as specified here
    # Default value: db-tls-secret 
    # secretName: "db-tls-secret"

    # Name of the volume where the secret will be mounted
    # Default value: db-tls-secret-volume 
    # volumeName: "db-tls-secret-volume"

    # The enableCluster value will allow you to indicate to Tyk whether you are
    # running a Redis cluster or not.
    # Default value: false
    # enableCluster: true

    # By default, the database index is 0. Setting the database index is not
    # supported with redis cluster. As such, if you have enableCluster: true,
    # then this value should be omitted or explicitly set to 0.
    storage:
      database: 0

  # Please check https://tyk.io/docs/planning-for-production/database-settings/mongodb/#supported-versions
  # for the list of supported MongoDB versions.
  mongo:
    useSSL: false
    # For tyk-simple-mongo (no auth)
    # mongoURL: mongodb://mongo.tyk.svc:27017/tyk_analytics
    mongoURL: ""
    # mongo-go driver is supported for Tyk 5.0.2+.
    # We recommend using the mongo-go driver if you are using MongoDB 4.4.x+.
    # For MongoDB versions prior to 4.4, please use the mgo driver.
    # Since Tyk 5.3 the default driver is mongo-go.
    driver: mongo-go

    # Connection URL can also be set using a secret. Provide the name of the secret and key below.
    # connectionURLSecret:
    #   name: ""
    #   keyName: ""

  # Enables validation of examples in the OAS spec. Defaults to false.
  # It is used to set TYK_DB_OAS_VALIDATE_EXAMPLES
  oasValidateExamples: false
  # Enables validation of schema defaults in the OAS spec. Defaults to false.
  # It is used to set TYK_DB_OAS_VALIDATE_SCHEMA_DEFAULTS
  oasValidateSchemaDefaults: false
  # hashKeys is used to enable/disable key hashing. It should match with the value set in Gateway configuration.
  # The Dashboard will now operate in a mode that is compatible with key hashing.
  # It is used to set TYK_DB_HASHKEYS
  hashKeys: true

  # streaming configures Tyk Streams
  streaming:
    # enabled configures whether Tyk Streams is enabled or not.
    # It is used to set TYK_DB_STREAMING_ENABLED
    enabled: true

dashboard:
  # This is the URL of your Tyk Gateway node, which is used to set TYK_DB_TYKAPI_HOST.
  # The Dashboard controls Tyk using the Gateway API and only requires visibility to one node. In a sharded environment,
  # the Gateway node specified here must not be sharded.
  # - If you are using tyk-stack chart, it is automatically set to the gateway service URL.
  #   HOWEVER, if Tyk Gateway runs with custom service name, please override with the correct URL using this field.
  # - If you are using tyk-dashboard chart, you need to set the correct Gateway URL here too.
  # The URL needs to be formatted as: http://gateway_host
  tykApiHost: ""
  # The port gateway is running on.
  # If you are using control port for gateway, set the value to control port.
  # It is used to set TYK_DB_TYKAPI_PORT
  # tykApiPort: 9696
  # enableOwnership specifies if API Ownership for Self-Managed installations is enabled or not.
  # It is used to set TYK_DB_ENABLEOWNERSHIP
  enableOwnership: true
  # defaultPageSize specifies the page size that the dashboard should use.
  # It is used to set TYK_DB_PAGESIZE
  defaultPageSize: 10
  # notifyOnChange specifies whether the Tyk Dashboard will notify all Tyk Gateway nodes to hot-reload when an API definition is changed.
  # It is used to set TYK_DB_NOTIFYONCHANGE
  notifyOnChange: true
  # Deprecated:
  #   This field is deprecated in from v1.4.0, please set `global.hashKeys` for configuring hash keys feature
  hashKeys: true
  # enableDuplicateSlugs configures the dashboard whether validate against other listen paths.
  # Setting this option to true will cause the dashboard to NOT validate against other listen paths.
  # It is used to set TYK_DB_ENABLEDUPLICATESLUGS
  enableDuplicateSlugs: true
  # showOrgId determines whether the Org ID will be shown in the Users -> Username detail page.
  # This can be useful for quickly identifying your Org ID.
  # It is used to set TYK_DB_SHOWORGID
  showOrgId: true
  hostConfig:
    # Enable this option to have the Dashboard only allow access on a specific domain and 404 on any other host access
    # It is used to set TYK_DB_HOSTCONFIG_ENABLEHOSTNAMES
    enableHostNames: true
    # By default, for developer portal, Tyk will add orgID prefix. Set to true if you have single tenant application or each portal on separate domain.
    # It is used to set TYK_DB_HOSTCONFIG_DISABLEORGSLUGPREFIX
    disableOrgSlugPrefix: true
    # Set this value to whatever hostname your Tyk Gateway is running on.
    # It is used to set TYK_DB_HOSTCONFIG_GATEWAYHOSTNAME
    overrideHostname: "tyk-gw.local"
  # The path to the home directory of the Tyk Dashboard. This must be set for Portal templates and other files to be loadable.
  # It is used to set TYK_DB_HOMEDIR
  homeDir: "/opt/tyk-dashboard"
  # If using the mongo-pump-selective pump, where data is written to org-id-specific collections in MongoDB,
  # then enabling this option will switch querying for analytics over to the independent collection entries.
  # It is used to set TYK_DB_USESHARDEDANALYTICS
  useShardedAnalytics: false
  # If using the new Aggregate Pump, Tyk Analytics can make use of the newer, faster Analytics lookup,
  # to ensure that this can be made backwards compatible.This option must be set to true,
  # in conjunction with the aggregate_lookup_cutoff value.
  # It is used to set TYK_DB_ENABLEAGGREGATELOOKUPS
  enableAggregateLookups: true
  # enableAnalyticsCache enables the caching of analytics data queries.
  # When this field is set to true, the Tyk Dashboard will cache the results of analytics queries in Redis,
  # which can significantly improve performance by reducing the load on the underlying MongoDB or PostgreSQL database
  # that stores this data.
  # It is used to set TYK_DB_ENABLEANALYTICSCACHE
  enableAnalyticsCache: true
  # Set this value to true if you are planning to use Tyk Sync or Tyk Operator
  # It is used to set TYK_DB_ALLOWEXPLICITPOLICYID
  allowExplicitPolicyId: true
  # oAuth redirect URI separator
  # It is used to set TYK_DB_OAUTHREDIRECTURISEPARATOR
  oauthRedirectUriSeparator: ";"
  # keyRequestFields enables administrators to collect necessary information for API key issuance, enforce policies,
  # and provide the flexibility to customize the key request process according to evolving business needs.
  # It is used to set TYK_DB_KEYREQUESTFIELDS
  keyRequestFields: "appName;appType"
  # Dashboard session lifetime
  # It is used to set TYK_DB_DASHBOARDSESSIONLIFETIME
  dashboardSessionLifetime: 43200
  # When enabled, if the dashboard already has a user with a given email, it will be used for the login process
  # It is used to set TYK_DB_SSOENABLEUSERLOOKUP
  ssoEnableUserLookup: true
  # notificationsListenPort specifies the port that the Tyk Dashboard listens on for webhook notifications sent from Tyk Gateways.
  # It is used to set TYK_DB_NOTIFICATIONSLISTENPORT
  notificationsListenPort: 5000
  # To delete a key by its hash, set this option to true
  # It is used to set TYK_DB_ENABLEDELETEKEYBYHASH
  enableDeleteKeyByHash: true
  # To update a key by its hash, set this option to true.
  # It is used to set TYK_DB_ENABLEUPDATEKEYBYHASH
  enableUpdateKeyByHash: true
  # To retrieve a list of all key hash listings, set this option to true.
  # It is used to set TYK_DB_ENABLEHASHEDKEYSLISTING
  enableHashedKeysListing: true
  # Enable support for users with the same email for multiple organisations
  # It is used to set TYK_DB_ENABLEMULTIORGUSERS
  enableMultiOrgUsers: true 
  # This is a security feature that allows you to prevent the admin user from viewing the access token of a user.
  # It is used to set TYK_DB_SECURITY_FORBIDADMINVIEWACCESSTOKEN  
  forbidAdminViewAccessToken: true
  # This is a security feature that allows you to prevent the admin user from resetting the access token of a user.
  # It is used to set TYK_DB_SECURITY_FORBIDADMINRESETACCESSTOKEN  
  forbidAdminResetAccessToken: true
  # Configuration for Audit logs
  auditLogs:
    # Enables audit logging.
    # It is used to set TYK_DB_AUDIT_ENABLED
    enabled: false
    # Allow users to configure how dashboard store the audit logs.
    # Possible values are db and file.
    # It is used to set TYK_DB_AUDIT_STORETYPE
    type: "file"
    # Format of audit log file. Possible values are json and text
    # It is used to set TYK_DB_AUDIT_FORMAT
    format: "text"
    # Path to the audit log
    # It is used to set TYK_DB_AUDIT_PATH
    path: ""
    # Enables detailed records in the audit log.
    # If set to true then audit log records will contain the http-request (without body) and full http-response including the body.
    # It is used to set TYK_DB_AUDIT_DETAILEDRECORDING
    enableDetailedRecording: false
  opa:
    # Enables OPA support.
    # It is used to set TYK_DB_SECURITY_OPENPOLICY_ENABLED
    enabled: false
    # Enables OPA debug mode which will allow more detailed logs about the policy execution.
    # It is used to set TYK_DB_SECURITY_OPENPOLICY_DEBUG
    debug: false
    # Enables OPA API mode which allows you to manage the OPA policies via the Dashboard API
    # It is used to set TYK_DB_SECURITY_OPENPOLICY_ENABLEAPI
    api: false
    # If OPA is enabled with its default policies, you will need to set TYK_DB_SECURITY_ALLOWADMINRESETPASSWORD
    # to avoid bootstrap job failure because of the OPA policy restrictions.
    # It is used to set TYK_DB_SECURITY_ALLOWADMINRESETPASSWORD
    allowAdminPasswordReset: true

  # replicaCount specifies number of replicas to be created if kind is Deployment.
  replicaCount: 1

  # annotations be added to the Deployment / Statefulset of Tyk Dashboard
  annotations: {}

  # podAnnotations is annotations to be added to Tyk Dashboard pod.
  # It takes key-value pairs.
  # There are no required annotation field for Tyk Dashboard.
  #
  # podAnnotations:
  #   yourkey: value
  #   image: yourhub
  podAnnotations: {}

  # podLabels specifies labels to be added in dashboard Pod
  podLabels: {}

  image:
    # image repository for Tyk Dashboard.
    repository: tykio/tyk-dashboard

    # tag for Tyk Dashboard
    tag: v5.3.10

    # image pull policy
    pullPolicy: Always

  initContainers:
    initAnalyticsConf:
      resources: {}
      # If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

  # image pull secrets to use when pulling images from repository
  imagePullSecrets: []

  # The port which will be exposed on the container for tyk-dashboard
  containerPort: 3000

  service:
    # type corresponds to the service type of Tyk Dashboard Service.
    type: ClusterIP
    # externalTrafficPolicy corresponds to the external traffic policy if the service type is load balancer
    externalTrafficPolicy: Local
    # specify loadBalancerIP if the service type is load balancer
    loadBalancerIP: ""
    # annotations corresponds to the annotations which will be added into Tyk Dashboard Service.
    annotations: {}
    # The name given to the service port
    portName: ""    

  # We usually recommend not to specify default resources and to leave this
  # as a conscious choice for the user. This also increases the chances of charts to
  # run on environments with little resources, such as Minikube. If you do
  # want to specify resources, uncomment the following lines, adjust them
  # as necessary, and remove the curly braces after 'resources:'.
  #  resources:
  #   limits:
  #    cpu: 100m
  #    memory: 128Mi
  #   requests:
  #    cpu: 100m
  #    memory: 128Mi
  resources: {}

  # securityContext holds pod-level security attributes for Tyk Dashboard pod. All fields from PodSecurityContext object can be added here.
  securityContext:
    runAsUser: 1000
    fsGroup: 2000
    runAsNonRoot: true

  # containerSecurityContext holds container-level security attributes for Tyk Dashboard container. All fields from SecurityContext object can be added here.
  containerSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
    allowPrivilegeEscalation: false
    privileged: false
    readOnlyRootFilesystem: true
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop:
        - ALL

  # nodeSelector is a selector which must be true for Tyk Dashboard pod to fit on a specific node.
  nodeSelector: {}
  # tolerations specifies tolerations to be applied on Tyk Dashboard pods.
  tolerations: []
  # affinity specifies affinity and anti-affinity constraints.
  affinity: {}

  # extraContainers is a list of containers to be added to the pod
  # - name: sidecar
  #   image: sidecar:latest
  extraContainers: []

  # extraEnvs is used to set extra environment variables to Tyk Dashboard pod.
  # - name: TYK_DB_PAGESIZE
  #   value: "10"
  extraEnvs: []

  # extraVolumes is a list of volumes to be added to the pod
  # extraVolumes:
  #   - name: ca-certs
  #     secret:
  #       defaultMode: 420
  #       secretName: ca-certs
  extraVolumes: []

  # extraVolumeMounts is a list of volume mounts to be added to the pod
  # extraVolumeMounts:
  #   - name: ca-certs
  #     mountPath: /etc/ssl/certs/ca-certs.crt
  #     readOnly: true
  extraVolumeMounts: []

  # The hostname to bind the Dashboard to.
  hostName: tyk-dashboard.local

  tls:
    # The name of the secret which should contain the TLS certificate you want to use with the dashboard deployment
    secretName: tyk-default-tls-secret
    # This options allows you to skip verifying the TLS certificate. This is typically enabled when using self-signed certs.
    insecureSkipVerify: false

    # certificatesMountPath corresponds to the mount path of the secret.
    certificatesMountPath: "/etc/certs/tyk-dashboard"
    # List of certificates for each domain being covered by the application. It is used to set TYK_DB_HTTPSERVEROPTIONS_CERTIFICATES
    certificates:
      - domain_name: "*"
        cert_file: "/etc/certs/tyk-dashboard/tls.crt"
        key_file: "/etc/certs/tyk-dashboard/tls.key"

  # ingress specifies Ingress rules for Tyk Dashboard Service.
  # Ingress is disabled by default.
  ingress:
    # enabled specifies whether ingress is enabled or not.
    # Set it to true to enable Ingress for Tyk Dashboard Service.
    enabled: false

    # className specifies your ingress controller class name below
    className: ""

    # annotations specifies annotations to be added on Ingress resource.
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"

    # hosts corresponds to the rules to be added on Ingress rules.
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific

    # tls corresponds to the tls configuration if Ingress rules use TLS
    tls: []

  # serviceAccountName field indicates the name of the Service Account that is going to be used by the Pods.
  # If a service account is to be used for Tyk Dashboard, it should be manually created
  serviceAccountName: ""

portal:
  # ingress specifies Ingress rules for Tyk Classic Portal
  # Ingress is disabled by default.
  ingress:
    # enabled specifies whether ingress is enabled or not.
    # Set it to true to enable Ingress for Tyk Dashboard Service.
    enabled: false

    # specify your ingress controller class name below
    className: ""

    # annotations specifies annotations to be added on Ingress resource.
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"

    # hosts corresponds to the rules to be added on Ingress rules.
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific

    # tls corresponds to the tls configuration if Ingress rules use TLS
    tls: []
# tib is used to configure Tyk Identity Broker(TIB) connection details
tib:
  # enabled is used to enable/disable embedded TIB
  enabled: false
