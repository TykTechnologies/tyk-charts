{{- $isSemVer := regexMatch "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-(0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*(?:\\.(0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(0|[1-9]\\d*|[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$" .Values.dashboard.image.tag }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: dashboard-{{ include "tyk-dashboard.fullname" . }}
  {{- if .Values.dashboard.annotations }}
  annotations:
  {{- toYaml .Values.dashboard.annotations | nindent 4 }}
  {{- end }}
  labels:
    app: dashboard-{{ include "tyk-dashboard.fullname" . }}
    chart: {{ include "tyk-dashboard.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    tyk.tyk.io/k8s-bootstrap: tyk-dashboard
spec:
  replicas: {{ .Values.dashboard.replicaCount }}
  minReadySeconds: 5
  strategy:
    # indicate which strategy we want for rolling update
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      app: dashboard-{{ include "tyk-dashboard.fullname" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: dashboard-{{ include "tyk-dashboard.fullname" . }}
        release: {{ .Release.Name }}
        {{- with .Values.dashboard.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}        
      annotations:
      {{- if .Values.dashboard.podAnnotations }}
      {{ toYaml .Values.dashboard.podAnnotations | nindent 8 }}
      {{- end }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
    spec:
    {{- if .Values.dashboard.serviceAccountName }}
      serviceAccountName: "{{ .Values.dashboard.serviceAccountName }}"
    {{- end }}    
{{- if .Values.dashboard.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.dashboard.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.dashboard.tolerations }}
      tolerations:
{{ toYaml .Values.dashboard.tolerations | indent 8 }}
{{- end }}
{{- if .Values.dashboard.affinity }}
      affinity:
{{ toYaml .Values.dashboard.affinity | indent 8 }}
{{- end }}
      {{- with .Values.dashboard.imagePullSecrets }}
      imagePullSecrets: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- if and $isSemVer (semverCompare "<=5.0.2" .Values.dashboard.image.tag) }}
      initContainers:
        - name: init-analytics-conf
          image: {{ .Values.global.imageRegistry }}busybox:1.32
          args: ["sh", "-c", 'touch /etc/tyk-dashboard/tyk_analytics.conf && echo "{}" > /etc/tyk-dashboard/tyk_analytics.conf']
          {{- if .Values.dashboard.containerSecurityContext }}
          securityContext:
          {{- toYaml .Values.dashboard.containerSecurityContext | nindent 12 }}
          {{- end }}          
          resources:
          {{- toYaml .Values.dashboard.initContainers.initAnalyticsConf.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /etc/tyk-dashboard
              name: analytics-conf
      {{- end }}
      containers:
      - image: "{{ .Values.global.imageRegistry }}{{ .Values.dashboard.image.repository }}:{{ .Values.dashboard.image.tag }}"
        imagePullPolicy: {{ .Values.dashboard.image.pullPolicy }}
        name: dashboard-{{ .Chart.Name }}
        {{- if .Values.dashboard.containerSecurityContext }}
        securityContext:
        {{- toYaml .Values.dashboard.containerSecurityContext | nindent 12 }}
        {{- end }}
        env:
          - name: "TYK_DB_ENABLEOWNERSHIP"
            value: "{{ .Values.dashboard.enableOwnership }}"
          - name: "TYK_DB_PAGESIZE"
            value: "{{ .Values.dashboard.defaultPageSize }}"
          - name: "TYK_DB_NOTIFYONCHANGE"
            value: "{{ .Values.dashboard.notifyOnChange }}"
          - name: "TYK_DB_HASHKEYS"
            value: {{ .Values.global.hashKeys | quote }}
          - name: "TYK_DB_ENABLEDUPLICATESLUGS"
            value: "{{ .Values.dashboard.enableDuplicateSlugs }}"
          - name: "TYK_DB_SHOWORGID"
            value: "{{ .Values.dashboard.showOrgId }}"
          - name: "TYK_DB_HOSTCONFIG_ENABLEHOSTNAMES"
            value: "{{ .Values.dashboard.hostConfig.enableHostNames }}"
          - name: "TYK_DB_HOSTCONFIG_DISABLEORGSLUGPREFIX"
            value: "{{ .Values.dashboard.hostConfig.disableOrgSlugPrefix }}"
          - name: "TYK_DB_HOSTCONFIG_GATEWAYHOSTNAME"
            value: "{{ .Values.dashboard.hostConfig.overrideHostname}}"
          - name: "TYK_DB_HOMEDIR"
            value: "{{ .Values.dashboard.homeDir }}"
          - name: "TYK_DB_USESHARDEDANLAYTICS"
            value: "{{ .Values.dashboard.useShardedAnalytics }}"
          - name: "TYK_DB_ENABLEANALYTICSCACHE"
            value: "{{ .Values.dashboard.enableAnalyticsCache }}"
          - name: "TYK_DB_ALLOWEXPLICITPOLICYID"
            value: "{{ .Values.dashboard.allowExplicitPolicyId }}"
          - name: "TYK_DB_OAUTHREDIRECTURISEPARATOR"
            value: "{{ .Values.dashboard.oauthRedirectUriSeparator }}"
          - name: "TYK_DB_KEYREQUESTFIELDS"
            value: "{{ .Values.dashboard.keyRequestFields }}"
          - name: "TYK_DB_DASHBOARDSESSIONLIFETIME"
            value: "{{ .Values.dashboard.dashboardSessionLifetime }}"
          - name: "TYK_DB_SSOENABLEUSERLOOKUP"
            value: "{{ .Values.dashboard.ssoEnableUserLookup }}"
          - name: "TYK_DB_NOTIFICATIONSLISTENPORT"
            value: "{{ .Values.dashboard.notificationsListenPort }}"
          - name: "TYK_DB_ENABLEDELETEKEYBYHASH"
            value: "{{ .Values.dashboard.enableDeleteKeyByHash }}"
          - name: "TYK_DB_ENABLEUPDATEKEYBYHASH"
            value: "{{ .Values.dashboard.enableUpdateKeyByHash }}"
          - name: "TYK_DB_ENABLEHASHEDKEYSLISTING"
            value: "{{ .Values.dashboard.enableHashedKeysListing }}"
          - name: "TYK_DB_ENABLEMULTIORGUSERS"
            value: "{{ .Values.dashboard.enableMultiOrgUsers }}"
          - name: "TYK_DB_SECURITY_FORBIDADMINVIEWACCESSTOKEN"
            value: "{{ .Values.dashboard.forbidAdminViewAccessToken }}"
          - name: "TYK_DB_SECURITY_FORBIDADMINRESETACCESSTOKEN"
            value: "{{ .Values.dashboard.forbidAdminResetAccessToken }}"                        
          ## DEFAULT TYK CONFIGURATION END
          {{- if .Values.global.streaming }}
          - name: TYK_DB_STREAMING_ENABLED
            value: {{ .Values.global.streaming.enabled | quote }}
          {{- end }}
          - name: TYK_DB_LISTENPORT
            value: "{{ .Values.dashboard.containerPort }}"
          - name: TYK_DB_OAS_VALIDATE_EXAMPLES
            value: "{{ .Values.global.oasValidateExamples }}"
          - name: TYK_DB_OAS_VALIDATE_SCHEMA_DEFAULTS
            value: "{{ .Values.global.oasValidateSchemaDefaults }}"
          # Legacy support for Redis Cluster driver. Driver dropped in v3.0.0.
          - name: REDIGOCLUSTER_SHARDCOUNT
            value: "128"
          - name: TYK_DB_TYKAPI_HOST
            value: {{ include "tyk-dashboard.tykApiHost" . | quote }}
          - name: TYK_DB_TYKAPI_PORT
            value: {{ include "tyk-dashboard.tykApiPort" . | quote }}
          - name: TYK_DB_TYKAPI_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ if .Values.global.secrets.useSecretName }} {{ .Values.global.secrets.useSecretName }} {{ else }} secrets-{{ include "tyk-dashboard.fullname" . }} {{ end}}
                key: APISecret
          - name: TYK_DB_ADMINSECRET
            valueFrom:
              secretKeyRef:
                name: {{ if .Values.global.secrets.useSecretName }} {{ .Values.global.secrets.useSecretName }} {{ else }} secrets-{{ include "tyk-dashboard.fullname" . }} {{ end}}
                key: AdminSecret
          - name: TYK_DB_NODESECRET
            valueFrom:
              secretKeyRef:
                name: {{ if .Values.global.secrets.useSecretName }} {{ .Values.global.secrets.useSecretName }} {{ else }} secrets-{{ include "tyk-dashboard.fullname" . }} {{ end}}
                key: APISecret
          - name: TYK_DB_LICENSEKEY
            valueFrom:
              secretKeyRef:
                name: {{ if .Values.global.secrets.useSecretName }} {{ .Values.global.secrets.useSecretName }} {{ else }} secrets-{{ include "tyk-dashboard.fullname" . }} {{ end}}
                key: DashLicense

          - name: TYK_DB_REDISADDRS
            value: {{ include "tyk-dashboard.redis_url" . | quote }}
        
          {{- if .Values.global.redis.useSSL }}
          - name: TYK_DB_REDISTLSMAXVERSION
            value: "{{ .Values.global.redis.tlsMaxVersion }}"
          - name: TYK_DB_REDISTLSMINVERSION
            value: "{{ .Values.global.redis.tlsMinVersion }}"  
          {{- end}}  

          {{- with .Values.global.redis }}
          {{- if and .useSSL .caFile }}
          - name: TYK_DB_REDISCAFILE
            value: "{{ .caFile }}"   
          {{- end }}
          {{- end }}            

          {{- with .Values.global.redis }}
          {{- if and .useSSL .certFile .keyFile }}
          - name: TYK_DB_REDISCERTFILE
            value: "{{ .certFile }}"
          - name: TYK_DB_REDISKEYFILE
            value: "{{ .keyFile }}"   
          {{- end }}
          {{- end }}                                                                                                             
          
          - name: TYK_DB_ENABLECLUSTER
            value: "{{ default "false" .Values.global.redis.enableCluster }}"
          - name: TYK_DB_REDISPASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "tyk-dashboard.redis_secret_name" . }}
                key: {{ include "tyk-dashboard.redis_secret_key" . }}
          - name: TYK_DB_REDISUSESSL
            value: "{{ default "false" .Values.global.redis.useSSL }}"

          {{- if .Values.global.redis.sslInsecureSkipVerify }}
          - name: TYK_DB_REDISSSLINSECURESKIPVERIFY
            value: "{{ .Values.global.redis.sslInsecureSkipVerify }}"
          {{- end}}

          - name: TYK_DB_HTTPSERVEROPTIONS_USESSL
            value: "{{ .Values.global.tls.dashboard }}"
          - name: TYK_DB_HTTPSERVEROPTIONS_MINVERSION
            value: "771"
          - name: TYK_DB_HTTPSERVEROPTIONS_CERTIFICATES
            value: '{{ .Values.dashboard.tls.certificates | toJson }}'
          - name: TYK_DB_HTTPSERVEROPTIONS_SSLINSECURESKIPVERIFY
            value: {{ default "false" .Values.dashboard.tls.insecureSkipVerify | quote }}

          - name: TYK_DB_HOSTCONFIG_HOSTNAME
            value: "{{ .Values.dashboard.hostName }}"
          - name: "TYK_DB_ENABLEAGGREGATELOOKUPS"
            value: "{{ .Values.dashboard.enableAggregateLookups }}"
          {{ if (.Values.dashboard.auditLogs).enabled }}
          - name: TYK_DB_AUDIT_ENABLED
            value: "{{ .Values.dashboard.auditLogs.enabled }}"
          - name: TYK_DB_AUDIT_STORETYPE
            value: "{{ .Values.dashboard.auditLogs.type }}"
            {{ if eq "file" (.Values.dashboard.auditLogs).type  }}
          - name: TYK_DB_AUDIT_FORMAT
            value: "{{ .Values.dashboard.auditLogs.format }}"
          - name: TYK_DB_AUDIT_PATH
            value: "{{ .Values.dashboard.auditLogs.path }}"
            {{ end }}
          - name: TYK_DB_AUDIT_DETAILEDRECORDING
            value: "{{ .Values.dashboard.auditLogs.enableDetailedRecording }}"
          {{ end }}

          {{ if eq "postgres" (include "tyk-dashboard.storageType" .) }}
          - name: TYK_DB_STORAGE_MAIN_TYPE
            value: "postgres"
          - name: TYK_DB_STORAGE_MAIN_CONNECTIONSTRING
            valueFrom:
              secretKeyRef:
                name: {{ include "tyk-dashboard.pg_connection_string_secret_name" . }}
                key: {{ include "tyk-dashboard.pg_connection_string_secret_key" . }}

          - name: TYK_DB_STORAGE_ANALYTICS_TYPE
            value: "postgres"
          - name: TYK_DB_STORAGE_ANALYTICS_CONNECTIONSTRING
            valueFrom:
             secretKeyRef:
                name: {{ include "tyk-dashboard.pg_connection_string_secret_name" . }}
                key: {{ include "tyk-dashboard.pg_connection_string_secret_key" . }}

          - name: TYK_DB_STORAGE_UPTIME_TYPE
            value: "postgres"
          - name: TYK_DB_STORAGE_UPTIME_CONNECTIONSTRING
            valueFrom:
              secretKeyRef:
                name: {{ include "tyk-dashboard.pg_connection_string_secret_name" . }}
                key: {{ include "tyk-dashboard.pg_connection_string_secret_key" . }}
          {{ else }}
          - name: TYK_DB_STORAGE_MAIN_TYPE
            value: "mongo"
          - name: TYK_DB_MONGOURL
            valueFrom:
              secretKeyRef:
                name: {{ include "tyk-dashboard.mongo_url_secret_name" . }}
                key: {{ include "tyk-dashboard.mongo_url_secret_key" . }}
          - name: TYK_DB_MONGOUSESSL
            value: "{{ default "false" .Values.global.mongo.useSSL }}"
          - name: TYK_DB_MONGODRIVER
            value: "{{ default "mongo-go" .Values.global.mongo.driver}}"
          {{ end }}

          {{- if .Values.tib }}
          - name:  TYK_DB_TIB_ENABLED
            value: {{ .Values.tib.enabled | quote }}
          {{- end }}
          - name: TYK_DB_SECURITY_OPENPOLICY_ENABLED
            value: {{ .Values.dashboard.opa.enabled | quote }}
          - name: TYK_DB_SECURITY_OPENPOLICY_DEBUG
            value: {{ .Values.dashboard.opa.debug | quote }}
          - name: TYK_DB_SECURITY_OPENPOLICY_ENABLEAPI
            value: {{ .Values.dashboard.opa.api | quote }}
          - name: TYK_DB_SECURITY_ALLOWADMINRESETPASSWORD
            value: {{ .Values.dashboard.opa.allowAdminPasswordReset | quote }}

          {{- if .Values.dashboard.extraEnvs }}
          {{- include "tyk-dashboard.tplvalues.render" (dict "value" .Values.dashboard.extraEnvs "context" $) | nindent 10 }}
          {{- end }}
        resources:
{{ toYaml .Values.dashboard.resources | indent 12 }}
        {{- if and  $isSemVer (semverCompare "<=5.0.2" .Values.dashboard.image.tag) }}
        command: ["/opt/tyk-dashboard/tyk-analytics", "--conf=/etc/tyk-dashboard/tyk_analytics.conf"]
        {{- else }}
        command: ["/opt/tyk-dashboard/tyk-analytics"]
        {{- end }}
        ports:
        - containerPort: {{ .Values.dashboard.containerPort }}
        volumeMounts:
          {{- with .Values.global.redis }}
          {{- if and .useSSL .volumeName .certificatesMountPath }}
          - name: {{ .volumeName }}
            mountPath: {{ .certificatesMountPath }}
          {{- end }}
          {{- end }}

          {{- if and $isSemVer (semverCompare "<=5.0.2" .Values.dashboard.image.tag) }}
          - name: analytics-conf
            mountPath: /etc/tyk-dashboard
          {{- end }}
          {{ if .Values.global.tls.dashboard }}
          - name: {{ .Values.dashboard.tls.secretName }}
            mountPath: {{ .Values.dashboard.tls.certificatesMountPath }}
          {{ end }}
          {{- if .Values.dashboard.extraVolumeMounts }}
          {{- include "tyk-dashboard.tplvalues.render" (dict "value" .Values.dashboard.extraVolumeMounts "context" $) | nindent 10 }}
          {{- end }}
        livenessProbe:
          httpGet:
            scheme: "HTTP{{ if .Values.global.tls.dashboard }}S{{ end }}"
            path: /hello
            port: {{ .Values.dashboard.containerPort }}
          initialDelaySeconds: 10
          periodSeconds: 2
          timeoutSeconds: 3
          failureThreshold: 2
        readinessProbe:
          httpGet:
            scheme: "HTTP{{ if .Values.global.tls.dashboard }}S{{ end }}"
            path: /hello
            port: {{ .Values.dashboard.containerPort }}
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
      {{- with .Values.dashboard.extraContainers }}
      {{- include "tyk-dashboard.tplvalues.render" (dict "value" . "context" $) | nindent 6 }}
      {{- end }}
      {{- if .Values.dashboard.securityContext }}
      securityContext:
      {{- toYaml .Values.dashboard.securityContext | nindent 10 }}
      {{- end }}
      volumes:
        {{- with .Values.global.redis }}
        {{- if and .useSSL .secretName .volumeName }}
        - name: {{ .volumeName }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
        {{- end }}

        {{- if and $isSemVer (semverCompare "<=5.0.2" .Values.dashboard.image.tag) }}
        - name: analytics-conf
          emptyDir: {}
        {{- end }}
        {{ if .Values.global.tls.dashboard }}
        - name: {{ .Values.dashboard.tls.secretName }}
          secret:
            secretName: {{ .Values.dashboard.tls.secretName }}
        {{ end }}
        {{- if .Values.dashboard.extraVolumes }}
        {{- include "tyk-dashboard.tplvalues.render" (dict "value" .Values.dashboard.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
