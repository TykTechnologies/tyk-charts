apiVersion: batch/v1
kind: Job
metadata:
  name: bootstrap-pre-install-{{ include "tyk-bootstrap.fullname" . }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    tyk.tyk.io/k8s-bootstrap: tyk-k8s-bootstrap-pre-install

    # Removed the use of appVersion since it's not accurate. We'll put it back in v1.0
    # when every app will have its own a chart
    # app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: 1
  template:
    metadata:
      annotations:
        {{- if .Values.bootstrap.podAnnotations.preInstallPodAnnotations }}
        {{ toYaml .Values.bootstrap.podAnnotations.preInstallPodAnnotations | nindent 8 }}
        {{- end }}
      labels:
        {{- with .Values.bootstrap.podLabels.preInstallPodLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}    
    spec:
      serviceAccountName: {{ default "k8s-bootstrap-role" .Values.bootstrap.serviceAccountName | quote }}
{{- if .Values.bootstrap.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.bootstrap.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.bootstrap.tolerations }}
      tolerations:
{{ toYaml .Values.bootstrap.tolerations | indent 8 }}
{{- end }}
{{- if .Values.bootstrap.affinity }}
      affinity:
{{ toYaml .Values.bootstrap.affinity | indent 8 }}
{{- end }}
      containers:
        - name: bootstrap-tyk-pre-install
          image: {{ .Values.global.imageRegistry }}{{ .Values.bootstrap.jobs.preInstall.image.repository }}:{{ .Values.bootstrap.jobs.preInstall.image.tag }}
          command: ['/app/bin/bootstrap-app-pre-install']
          imagePullPolicy: IfNotPresent
          {{- if .Values.bootstrap.containerSecurityContext }}
          securityContext:
          {{- toYaml .Values.bootstrap.containerSecurityContext | nindent 12 }}
          {{- end }}
          env:
            - name: TYK_K8SBOOTSTRAP_TYK_DASHBOARDLICENSE
              {{ if .Values.global.secrets.useSecretName }}
              valueFrom:
                secretKeyRef:
                  key: DashLicense
                  name: {{ .Values.global.secrets.useSecretName }}
              {{ else }}
              value: {{ .Values.global.license.dashboard | quote }}
              {{ end }}
          {{- if .Values.bootstrap.jobs.preInstall.extraEnvs }}
          {{- include "tyk-bootstrap.tplvalues.render" ( dict "value" .Values.bootstrap.jobs.preInstall.extraEnvs "context" $ ) | nindent 12 }}
          {{- end }}
          {{- if .Values.bootstrap.extraVolumeMounts }}
          volumeMounts:
            {{- include "tyk-bootstrap.tplvalues.render" (dict "value" .Values.bootstrap.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
      {{- if .Values.bootstrap.extraVolumes }}
      volumes:
        {{- include "tyk-bootstrap.tplvalues.render" (dict "value" .Values.bootstrap.extraVolumes "context" $) | nindent 8 }}
      {{- end }}
      restartPolicy: Never
      terminationGracePeriodSeconds: 0
