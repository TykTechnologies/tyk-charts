# Default values for tyk-bootstrap.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# fullnameOverride overrides App name. It is truncated to 63 characters.
fullnameOverride: ""

# nameOverride overrides the Chart name. It is truncated to 63 characters.
nameOverride: ""

global:
  license:
    # The license key needed for the Tyk Dashboard.
    dashboard: ""
    # The license key needed for Tyk Operator.
    #
    # NOTE: If you do not want to store license as a plain text in the file, you can use a Kubernetes secret
    # that stores the operator license. Please see `.global.secrets.useSecretName`.
    operator: ""
  adminUser:
    # If you don't want to store plaintext secrets for admin user in the Helm value file and would
    # rather provide the k8s Secret externally please populate the value below
    # You can set following fields in the secret
    # adminUserFirstName - sets .global.adminUser.firstName
    # adminUserLastName - sets .global.adminUser.lastName
    # adminUserEmail - sets .global.adminUser.email
    useSecretName: ""

    # firstName corresponds to the first name of the admin user that will be created during the bootstrapping process.
    # It is used to set TYK_K8SBOOTSTRAP_TYK_ADMIN_FIRSTNAME
    firstName: admin
    # lastName corresponds to the last name of the admin user that will be created during the bootstrapping process.
    # It is used to set TYK_K8SBOOTSTRAP_TYK_ADMIN_LASTNAME
    lastName: user
    # email corresponds to the email of the admin user that will be created during the bootstrapping process.
    # It is used to set TYK_K8SBOOTSTRAP_TYK_ADMIN_EMAILADDRESS
    email: default@example.com

  components:
    # Determines whether the bootstrap jobs should be run
    # Those jobs verify the presence of the dashboard license and perform various operations to
    # make apps such as tyk-dashboard, tyk-portal and tyk-operator ready to use from the get go
    # If this is set to false, only the hook that checks for dashboard license will be run
    bootstrap: true

  tls:
    # If set to true the Dashboard will use SSL connection.
    dashboard: false

  secrets:
    # tyk_analytics.conf admin_secret
    AdminSecret: "12345"
    # If you don't want to store plaintext secrets in the Helm value file and would
    # rather provide the k8s Secret externally please populate the value below
    # You can set following fields in the secret
    # APISecret - Sets node secret in both dashboard and tyk config
    # AdminSecret - Admin user secret key
    # DashLicense - Tyk Dashboard license key
    # OperatorLicense - Tyk Operator license key
    useSecretName: ""
    devPortal: tyk-dev-portal-conf

  imageRegistry: ""

bootstrap:
  # Trigger to control if we want to bootstrap the Developer Portal component using tyk-bootstrap
  devPortal: true

  # Trigger to control if we want to bootstrap the dashboard component using tyk-bootstrap
  dashboard: true

  # Trigger to control if we want to bootstrap the classic portal component using tyk-bootstrap
  portal: false

  # Skip validating the SSL certificates. Usually needed when using self-signed certs.
  sslInsecureSkipVerify: false

  # Trigger to control if we want to create the tyk-operator secret
  operatorSecret: tyk-operator-conf

  # The default name for the sa is k8s-bootstrap-role
  # serviceAccountName field configures the name of the ServiceAccount that is going to be created for bootstrapping Jobs
  serviceAccountName: "k8s-bootstrap-role"

  # jobs field includes configurations for Helm Hooks.
  jobs:
    # preInstall configures pre-install Helm hook
    preInstall:
      # image specifies image repository of bootstrap images
      image:
        # repository specifies image repository of pre-install job.
        repository: tykio/tyk-k8s-bootstrap-pre-install
        # tag specifies image tag of pre-install job.
        tag: v2.2.0

      # extraEnvs is used to set extra environment variables to pre-install job.
      # - name: TYK_K8SBOOTSTRAP_TYK_DASHBOARDLICENSE
      #   value: "yourlicense"
      extraEnvs: []

    # postInstall configures post-install Helm hook
    postInstall:
      # image specifies image repository of bootstrap images
      image:
        # repository specifies image repository of post-install job.
        repository: tykio/tyk-k8s-bootstrap-post
        # tag specifies image tag of post-install job.
        tag: v2.2.0

      # extraEnvs is used to set extra environment variables to post-install job.
      # - name: TYK_K8SBOOTSTRAP_TYK_ADMIN_FIRSTNAME
      #   value: "burak"
      extraEnvs: []

    # preDelete configures pre-delete Helm hook
    preDelete:
      # image specifies image repository of bootstrap images
      image:
        # repository specifies image repository of pre-delete job.
        repository: tykio/tyk-k8s-bootstrap-pre-delete
        # tag specifies image tag of pre-delete job.
        tag: v2.2.0

      # extraEnvs is used to set extra environment variables to pre-delete job.
      # - name: TYK_K8SBOOTSTRAP_OPERATORKUBERNETESSECRETNAME
      #   value: "tyk-operator-conf"
      extraEnvs: []

  org:
    # The name for your organization inside Tyk
    name: Default Org
    # The hostname to bind the Portal to.
    cname: tyk-portal.local
    # hybrid configures whether hybrid organisation is enabled during bootstrap or not.
    hybrid:
      # Enabling hybrid allows a worker gateways to login as an organisation member into MDCB.
      # Set this field to true while using MDCB control plane.
      enabled: false

  # podAnnotations specifies annotations to be added Tyk Bootstrap job pods.
  # It takes key-value pairs.
  # There are no required annotations for Tyk Bootstrap.
  #
  # podAnnotations:
  #   postInstallPodAnnotations:
  #     key: value
  #     post: install
  #   preDeletePodAnnotations:
  #     key: value
  #     post: install
  podAnnotations:
    # preInstallPodAnnotations specifies annotations to be added to Tyk Bootstrap pre-install hook's job pods.
    preInstallPodAnnotations: {}
    # postInstallPodAnnotations specifies annotations to be added to Tyk Bootstrap post-install hook's job pods.
    postInstallPodAnnotations: {}
    # preDeletePodAnnotations specifies annotations to be added to Tyk Bootstrap pre-delete hook's job pods.
    preDeletePodAnnotations: {}

  # podLabels specifies labels to be added in bootstrap Pod
  podLabels:
    # preInstallPodLabels specifies labels to be added to Tyk Bootstrap pre-install hook's job pods.
    preInstallPodLabels: {}
    # postInstallPodLabels specifies labels to be added to Tyk Bootstrap post-install hook's job pods.
    postInstallPodLabels: {}
    # preDeletePodLabels specifies labels to be added to Tyk Bootstrap pre-delete hook's job pods.
    preDeletePodLabels: {}

  # node labels for bootstrap pods assignment
  nodeSelector: {}

  # tolerations for bootstrap pods assignment
  tolerations: {}

  # affinity for bootstrap pods assignment
  affinity: {}

  # containerSecurityContext values for bootstrap containers
  containerSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
    allowPrivilegeEscalation: false
    privileged: false
    readOnlyRootFilesystem: true
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop:
        - ALL

  # extraVolumes is a list of volumes to be added to the pod
  # extraVolumes:
  #   - name: ca-certs
  #     secret:
  #       defaultMode: 420
  #       secretName: ca-certs
  extraVolumes: []

  # extraVolumeMounts is a list of volume mounts to be added to the pod
  # extraVolumeMounts:
  #   - name: ca-certs
  #     mountPath: /etc/ssl/certs/ca-certs.crt
  #     readOnly: true
  extraVolumeMounts: []
