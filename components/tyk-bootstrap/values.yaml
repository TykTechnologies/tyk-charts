# Default values for tyk-bootstrap.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

fullnameOverride: ""
nameOverride: ""

global:
  license:
    # The license key needed for the Tyk Dashboard.
    dashboard: ""
  adminUser:
    # If you don't want to store plaintext secrets for admin user in the Helm value file and would
    # rather provide the k8s Secret externally please populate the value below
    # You can set following fields in the secret
    # adminUserFirstName - sets .global.adminUser.firstName
    # adminUserLastName - sets .global.adminUser.lastName
    # adminUserEmail - sets .global.adminUser.email
    useSecretName: ""

    firstName: admin
    lastName: user
    email: default@example.com

  components:
    # Enables/disables the dashboard component and also used to detect when the bootstrapping needs to be done
    # for a separate Tyk Dashboard installation or for an umbrella chart installation
    dashboard: false
    devPortal: false

  tls:
    # If set to true the Dashboard will use SSL connection.
    # You will also need to set the:
    # - TYK_DB_SERVEROPTIONS_CERTIFICATE_CERTFILE
    # - TYK_DB_SERVEROPTIONS_CERTIFICATE_KEYFILE
    # variables in extraEnvs object array to define your SSL cert and key files.
    # When true, sets the dashboard protocol to HTTPS.
    dashboard: false
    # When true, sets the gateway protocol to HTTPS.
    gateway: false

  secrets:
    # tyk_analytics.conf admin_secret
    # tib.conf TykAPISettings.GatewayConfig.AdminSecret
    # tib.conf TykAPISettings.DashboardConfig.AdminSecret
    AdminSecret: "12345"
    # If you don't want to store plaintext secrets in the Helm value file and would
    # rather provide the k8s Secret externally please populate the value below
    # You can set following fields in the secret
    # AdminSecret - Admin user secret key
    useSecretName: ""
    devPortal: tyk-dev-portal-conf

bootstrap:
  # Trigger to control if we want to bootstrap the Developer Portal component using tyk-bootstrap
  devPortal: true

  # Trigger to control if we want to bootstrap the dashboard component using tyk-bootstrap
  dashboard: true

  # Trigger to control if we want to bootstrap the dashboard component using tyk-bootstrap
  portal: true

  # Skip validating the SSL certificates. Usually needed when using self-signed certs.
  sslInsecureSkipVerify: false

  # Trigger to control if we want to create the tyk-operator secret
  operatorSecret: true

  # jobs field includes configurations for Helm Hooks.
  jobs:
    # preInstall configures pre-install Helm hook
    preInstall:
      # image specifies image repository of bootstrap images
      image:
        # repository specifies image repository of pre-install job.
        repository: tykio/tyk-k8s-bootstrap-pre-install
        # tag specifies image tag of pre-install job.
        tag: v2.0.0-beta1

    # postInstall configures post-install Helm hook
    postInstall:
      # image specifies image repository of bootstrap images
      image:
        # repository specifies image repository of post-install job.
        repository: tykio/tyk-k8s-bootstrap-post
        # tag specifies image tag of post-install job.
        tag: v2.0.0-beta1

    # preDelete configures pre-delete Helm hook
    preDelete:
      # image specifies image repository of bootstrap images
      image:
        # repository specifies image repository of pre-delete job.
        repository: tykio/tyk-k8s-bootstrap-pre-delete
        # tag specifies image tag of pre-delete job.
        tag: v2.0.0-beta1

  org:
    # The name for your organization inside Tyk
    name: Default Org
    # The hostname to bind the Portal to.
    cname: tyk-portal.local

  # podAnnotations specifies annotations to be added Tyk Bootstrap job pods.
  # It takes key-value pairs.
  # There are no required annotations for Tyk Bootstrap.
  #
  # podAnnotations:
  #   postInstallPodAnnotations:
  #     key: value
  #     post: install
  #   preDeletePodAnnotations:
  #     key: value
  #     post: install
  podAnnotations:
    preInstallPodAnnotations: {}
    postInstallPodAnnotations: {}
    preDeletePodAnnotations: {}
