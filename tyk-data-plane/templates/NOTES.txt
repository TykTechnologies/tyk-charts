Thank you for installing Tyk Data Plane Chart. Your release is named {{ .Release.Name }}.
At this point, Tyk Data Plane is fully installed and should be accessible.

{{- if index .Values "tyk-gateway" "gateway" "control" "enabled" }}

To quickly test everything is ok, you can port-forward gateway pod to {{ index .Values "tyk-gateway" "gateway" "control" "containerPort" }} on your machine:
    kubectl port-forward service/gateway-control-svc-{{ template "tyk-gateway.fullname" (index .Subcharts "tyk-gateway")}} {{ index .Values "tyk-gateway" "gateway" "control" "port" }}:{{ index .Values "tyk-gateway" "gateway" "control" "containerPort" }}
    curl localhost:{{ index .Values "tyk-gateway" "gateway" "control" "containerPort" }}/hello
{{- else }}

To quickly test everything is ok, you can port-forward gateway pod to {{ index .Values "global" "servicePorts" "gateway" }} on your machine :
    kubectl port-forward service/gateway-svc-{{ template "tyk-gateway.fullname" (index .Subcharts "tyk-gateway")}} {{ index .Values "global" "servicePorts" "gateway" }}:{{ index .Values "global" "servicePorts" "gateway" }}
    curl localhost:{{ index .Values "global" "servicePorts" "gateway" }}/hello
{{- end }}

=== API Secret (TYK_GW_SECRET) ===
{{- if not .Values.global.secrets.useSecretName }}
    export TYK_GW_SECRET=$(kubectl get secret --namespace {{ .Release.Namespace }} secrets-{{ include "tyk-data-plane.fullname" . }} -o jsonpath="{.data.APISecret}" | base64 --decode)
{{- else }}
    export TYK_GW_SECRET=$(kubectl get secret --namespace {{ .Release.Namespace }} {{ .Values.global.secrets.useSecretName }} -o jsonpath="{.data.APISecret}" | base64 --decode)
{{- end }}

{{ if .Values.global.mdcbSynchronizer.enabled }}
=== Tyk MDCB Synchroniser ===
Tyk MDCB Synchroniser feature is enabled. Tyk Gateway(s), worker gateway(s), in the data plane has to be
configured as per the provided documentation below.

While deploying Tyk Data Plane through tyk-helm/tyk-data-plane chart, please make sure setting

    TYK_GW_SLAVEOPTIONS_SYNCHRONISERENABLED=true
    TYK_GW_SLAVEOPTIONS_KEYSPACESYNCINTERVAL=10 # based on your preference
    TYK_GW_SLAVEOPTIONS_GROUPID=YOUR_GROUP_ID # if you are running a cluster of Gateways

These environment variables can be set through either `global.mdcbSynchronizer` or manually `tyk-gateway.gateway.extraEnvs` fields in tyk-data-plane/values.yaml file.

- Updating `global.mdcbSynchronizer` field in tyk-data-plane/values.yaml file
global:
    mdcbSynchronizer:
        enabled: true
        keySpaceSyncInterval: 10

- Updating `tyk-gateway.gateway.extraEnvs` field in tyk-data-plane/values.yaml file
tyk-gateway:
    gateway:
        extraEnvs:
            - name: TYK_GW_SLAVEOPTIONS_SYNCHRONISERENABLED
              value: "true"
            - name: TYK_GW_SLAVEOPTIONS_KEYSPACESYNCINTERVAL
              value: "10"
            - name: TYK_GW_SLAVEOPTIONS_GROUPID
              value: "FOOBAR"

For more details about setting Tyk Gateways in Tyk Data Plane, please refer to official documentation:
    https://tyk.io/docs/product-stack/tyk-enterprise-mdcb/advanced-configurations/synchroniser/

{{ end -}}


===================================================
  Manage Ingress resources and APIs on Kubernetes
===================================================
You might want to install Tyk Operator next to manage Ingress resources or manage your APIs.
Please check Tyk Operator documentation at https://tyk.io/docs/tyk-operator/
