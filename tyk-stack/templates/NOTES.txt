Thank you for installing Tyk Stack Chart. Your release is named {{ .Release.Name }}.

NOTE:
{{ $tykApiPort := (include "tyk-dashboard.tykApiPort" (index .Subcharts "tyk-dashboard")) -}}
    Tyk Dashboard connects to Tyk Gateway at {{ (include "tyk-dashboard.tykApiHost" (index .Subcharts "tyk-dashboard")) }} over port {{ $tykApiPort }} for key management functions.
    Please double check if Tyk Gateway runs on this address. If not, Tyk Gateway host and Tyk Gateway port can be overridden
        through .tyk-dashboard.dashboard.tykApiHost and .tyk-dashboard.dashboard.tykApiPort fields respectively in values.yaml.

{{ if index .Values "tyk-gateway" "gateway" "control" "enabled" }}
{{- $gwSvcName := printf "gateway-control-svc-%v" (include "tyk-gateway.fullname" (index .Subcharts "tyk-gateway"))  -}}
To quickly test everything is ok, you can port-forward Tyk Gateway pod:
    kubectl port-forward --namespace {{ .Release.Namespace }} service/{{ $gwSvcName }} {{ index .Values "tyk-gateway" "gateway" "control" "port" }}:{{ index .Values "tyk-gateway" "gateway" "control" "containerPort" }}
    curl localhost:{{ index .Values "tyk-gateway" "gateway" "control" "port" }}/hello
{{- else }}
{{- $gwSvcName := printf "gateway-svc-%v" (include "tyk-gateway.fullname" (index .Subcharts "tyk-gateway"))  -}}
To quickly test everything is ok, you can port-forward Tyk Gateway pod:
    kubectl port-forward --namespace {{ .Release.Namespace }} service/{{ $gwSvcName }} {{ index .Values "global" "servicePorts" "gateway" }}:{{ index .Values "global" "servicePorts" "gateway" }}
    curl localhost:{{ index .Values "global" "servicePorts" "gateway" }}/hello
{{- end }}

{{ if .Values.global.components.bootstrap -}}
=== Tyk Dashboard Login Details ===
{{- if not .Values.global.adminUser.useSecretName }}
    export TYK_DASHBOARD_ADMINEMAIL={{ .Values.global.adminUser.email }}
    export TYK_DASHBOARD_ADMINPASSWORD=$(kubectl get secret --namespace {{ .Release.Namespace }} tyk-dashboard-login-details -o jsonpath="{.data.adminUserPassword}" | base64 --decode)
{{- else }}
    export TYK_DASHBOARD_ADMINEMAIL=$(kubectl get secret --namespace {{ .Release.Namespace }} {{ .Values.global.adminUser.useSecretName }} -o jsonpath="{.data.adminUserEmail}" | base64 --decode)
    export TYK_DASHBOARD_ADMINPASSWORD=$(kubectl get secret --namespace {{ .Release.Namespace }} {{ .Values.global.adminUser.useSecretName }} -o jsonpath="{.data.adminUserPassword}" | base64 --decode)
{{- end }}
{{- end }}

{{- if index .Values "tyk-dashboard" "dashboard" "ingress" "enabled" }}
{{- $tlsEnabled := index .Values "tyk-dashboard" "dashboard" "ingress" "tls" }}
=== Ingress ===
{{- range $host := index .Values "tyk-dashboard" "dashboard" "ingress" "hosts" }}
  {{- range .paths }}
  http{{ if $tlsEnabled }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- end }}

===================================================
  Manage Ingress resources and APIs on Kubernetes
===================================================
You might want to install Tyk Operator next to manage Ingress resources or manage your APIs.
Please check Tyk Operator documentation at https://tyk.io/docs/tyk-operator/
